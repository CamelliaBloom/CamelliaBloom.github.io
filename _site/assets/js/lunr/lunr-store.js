var store = [{
        "title": "Lhasa Apso",
        "excerpt":"   The Lhasa Apso (/ˈlɑːsə ˈæpsoʊ/ lah-sə ap-soh) is a non-sporting dog breed originating in Tibet. It was bred as an interior sentinel in the Buddhist monasteries, to alert the monks to any intruders who entered. Lhasa is the capital city of Tibet, and apso is a word in the Tibetan language meaning “bearded”, so, Lhasa Apso simply means “long-haired Lhasa dog”. There are, however, some who claim that the word “apso” is a form of the Tibetan word “rapso”, meaning “goat-like”, which would make the equivalent translation “wooly Lhasa dog”.       From Wikipedia, the free encyclopedia   ","categories": [],
        "tags": [],
        "url": "/pets/lhasa-apso/",
        "teaser": null
      },{
        "title": "Tabby",
        "excerpt":"   A tabby is any domestic cat that has a coat featuring distinctive stripes, dots, lines or swirling patterns, usually together with a mark resembling an ‘M’ on its forehead. Tabbies are sometimes erroneously assumed to be a cat breed. In fact, the tabby pattern is found in many breeds, as well as among the general mixed-breed population. The tabby pattern is a naturally occurring feature that may be related to the coloration of the domestic cat’s direct ancestor, the African wildcat, which (along with the European wildcat and Asiatic wildcat) has a similar coloration.       From Wikipedia, the free encyclopedia   ","categories": [],
        "tags": [],
        "url": "/pets/tabby/",
        "teaser": null
      },{
        "title": "Baz Boom Identity",
        "excerpt":"Pictures of Goats section West Seattle Blog dingbat newspaper rubber cement Google+ newsroom cafe news.me rubber cement, Ushahidi Kindle Single syndicated Instagram HuffPo community mthomps, Mozilla iPhone app should isn’t a business model curmudgeon Snarkmarket Tim Carmody production of innocence. Fuego tweets community DocumentCloud metered model Gardening &amp; War section YouTube social media SEO information overload analytics Aron Pilhofer Journal Register data visualization WikiLeaks Groupon, collaboration Steve Jobs we need a Nate Silver AP What Would Google Do the power of the press belongs to the person who owns one Clay Shirky curmudgeon Voice of San Diego free as in beer dead trees the notion of the public Lucius Nieman.                                                                                                                                This is a sample gallery to go along with this case study.       hackgate copyright Lucius Nieman CNN leaves it there right-sizing a giant stack of newspapers that you’ll never read net neutrality algorithms RT algorithms TechCrunch 5% corruption, horse-race coverage Gardening &amp; War section CTR try PR CPC David Cohn shoot a photo algorithms content is king Android Snarkmarket crowdfunding, Fuego Twitter topples dictators YouTube abundance WordPress Reuters try PR stupid commenters should isn’t a business model bringing a tote bag to a knife fight.  ","categories": [],
        "tags": [],
        "url": "/portfolio/baz-boom-identity/",
        "teaser": "/assets/images/unsplash-gallery-image-1-th.jpg"
      },{
        "title": "Fizz Bang Identity",
        "excerpt":"Pictures of Goats section West Seattle Blog dingbat newspaper rubber cement Google+ newsroom cafe news.me rubber cement, Ushahidi Kindle Single syndicated Instagram HuffPo community mthomps, Mozilla iPhone app should isn’t a business model curmudgeon Snarkmarket Tim Carmody production of innocence. Fuego tweets community DocumentCloud metered model Gardening &amp; War section YouTube social media SEO information overload analytics Aron Pilhofer Journal Register data visualization WikiLeaks Groupon, collaboration Steve Jobs we need a Nate Silver AP What Would Google Do the power of the press belongs to the person who owns one Clay Shirky curmudgeon Voice of San Diego free as in beer dead trees the notion of the public Lucius Nieman.                                                                                                                                This is a sample gallery to go along with this case study.       hackgate copyright Lucius Nieman CNN leaves it there right-sizing a giant stack of newspapers that you’ll never read net neutrality algorithms RT algorithms TechCrunch 5% corruption, horse-race coverage Gardening &amp; War section CTR try PR CPC David Cohn shoot a photo algorithms content is king Android Snarkmarket crowdfunding, Fuego Twitter topples dictators YouTube abundance WordPress Reuters try PR stupid commenters should isn’t a business model bringing a tote bag to a knife fight.  ","categories": [],
        "tags": [],
        "url": "/portfolio/fizz-bang-identity/",
        "teaser": "/assets/images/unsplash-gallery-image-2-th.jpg"
      },{
        "title": "Foo Bar Identity",
        "excerpt":"Pictures of Goats section West Seattle Blog dingbat newspaper rubber cement Google+ newsroom cafe news.me rubber cement, Ushahidi Kindle Single syndicated Instagram HuffPo community mthomps, Mozilla iPhone app should isn’t a business model curmudgeon Snarkmarket Tim Carmody production of innocence. Fuego tweets community DocumentCloud metered model Gardening &amp; War section YouTube social media SEO information overload analytics Aron Pilhofer Journal Register data visualization WikiLeaks Groupon, collaboration Steve Jobs we need a Nate Silver AP What Would Google Do the power of the press belongs to the person who owns one Clay Shirky curmudgeon Voice of San Diego free as in beer dead trees the notion of the public Lucius Nieman.                                                                                                                                This is a sample gallery to go along with this case study.       hackgate copyright Lucius Nieman CNN leaves it there right-sizing a giant stack of newspapers that you’ll never read net neutrality algorithms RT algorithms TechCrunch 5% corruption, horse-race coverage Gardening &amp; War section CTR try PR CPC David Cohn shoot a photo algorithms content is king Android Snarkmarket crowdfunding, Fuego Twitter topples dictators YouTube abundance WordPress Reuters try PR stupid commenters should isn’t a business model bringing a tote bag to a knife fight.  ","categories": [],
        "tags": [],
        "url": "/portfolio/foo-bar-website/",
        "teaser": "/assets/images/foo-bar-identity-th.jpg"
      },{
        "title": "Ginger Gulp Identity",
        "excerpt":"Pictures of Goats section West Seattle Blog dingbat newspaper rubber cement Google+ newsroom cafe news.me rubber cement, Ushahidi Kindle Single syndicated Instagram HuffPo community mthomps, Mozilla iPhone app should isn’t a business model curmudgeon Snarkmarket Tim Carmody production of innocence. Fuego tweets community DocumentCloud metered model Gardening &amp; War section YouTube social media SEO information overload analytics Aron Pilhofer Journal Register data visualization WikiLeaks Groupon, collaboration Steve Jobs we need a Nate Silver AP What Would Google Do the power of the press belongs to the person who owns one Clay Shirky curmudgeon Voice of San Diego free as in beer dead trees the notion of the public Lucius Nieman.                                                                                                                                This is a sample gallery to go along with this case study.       hackgate copyright Lucius Nieman CNN leaves it there right-sizing a giant stack of newspapers that you’ll never read net neutrality algorithms RT algorithms TechCrunch 5% corruption, horse-race coverage Gardening &amp; War section CTR try PR CPC David Cohn shoot a photo algorithms content is king Android Snarkmarket crowdfunding, Fuego Twitter topples dictators YouTube abundance WordPress Reuters try PR stupid commenters should isn’t a business model bringing a tote bag to a knife fight.  ","categories": [],
        "tags": [],
        "url": "/portfolio/ginger-gulp-identity/",
        "teaser": "/assets/images/unsplash-gallery-image-3-th.jpg"
      },{
        "title": "Markup: Title *with* **Markdown**",
        "excerpt":"Verify that:      The post title renders the word “with” in italics and the word “Markdown” in bold.   The post title markup should be removed from the browser window / tab.  ","categories": ["Markdown"],
        "tags": ["css","html","title"],
        "url": "/markdown/markup-title-with-markup/",
        "teaser": null
      },{
        "title": "Markup: Title with Special&nbsp;---&nbsp;Characters",
        "excerpt":"Putting special characters in the title should have no adverse effect on the layout or functionality.   Special characters in the post title have been known to cause issues with JavaScript and XML when not properly encoded and escaped.   Latin Character Tests   This is a test to see if the fonts used in this theme support basic Latin characters.                  !                      &#8220;                      #                      $                      %                      &amp;                      &#8216;                      (                      )                      *                          +                      ,                      &#8211;                      .                      /                                     1                      2                      3                      4                          5                      6                      7                      8                      9                      :                      ;                      &gt;                      =                      &lt;                          ?                      @                      A                      B                      C                      D                      E                      F                      G                      H                          I                      J                      K                      L                      M                      N                      O                      P                      Q                      R                          S                      T                      U                      V                      W                      X                      Y                      Z                      [                                         ]                      ^                      _                      `                      a                      b                      c                      d                      e                      f                          g                      h                      i                      j                      k                      l                      m                      n                      o                      p                          q                      r                      s                      t                      u                      v                      w                      x                      y                      z                          {                      |                      }                      ~                                                                                                    ","categories": ["Markup"],
        "tags": ["html","markup","post","title"],
        "url": "/markup/markup-title-with-special-characters/",
        "teaser": null
      },{
        "title": "Markup: Text Alignment",
        "excerpt":"Default   This is a paragraph. It should not have any alignment of any kind. It should just flow like you would normally expect. Nothing fancy. Just straight up text, free flowing, with love. Completely neutral and not picking a side or sitting on the fence. It just is. It just freaking is. It likes where it is. It does not feel compelled to pick a side. Leave him be. It will just be better that way. Trust me.   Left Align   This is a paragraph. It is left aligned. Because of this, it is a bit more liberal in it’s views. It’s favorite color is green. Left align tends to be more eco-friendly, but it provides no concrete evidence that it really is. Even though it likes share the wealth evenly, it leaves the equal distribution up to justified alignment.   Center Align   This is a paragraph. It is center aligned. Center is, but nature, a fence sitter. A flip flopper. It has a difficult time making up its mind. It wants to pick a side. Really, it does. It has the best intentions, but it tends to complicate matters more than help. The best you can do is try to win it over and hope for the best. I hear center align does take bribes.   Right Align   This is a paragraph. It is right aligned. It is a bit more conservative in it’s views. It’s prefers to not be told what to do or how to do it. Right align totally owns a slew of guns and loves to head to the range for some practice. Which is cool and all. I mean, it’s a pretty good shot from at least four or five football fields away. Dead on. So boss.   Justify Align   This is a paragraph. It is justify aligned. It gets really mad when people associate it with Justin Timberlake. Typically, justified is pretty straight laced. It likes everything to be in it’s place and not all cattywampus like the rest of the aligns. I am not saying that makes it better than the rest of the aligns, but it does tend to put off more of an elitist attitude.  ","categories": ["Markup"],
        "tags": ["alignment","content","css","markup"],
        "url": "/markup/markup-text-alignment/",
        "teaser": null
      },{
        "title": "Markup: Image Alignment",
        "excerpt":"Welcome to image alignment! The best way to demonstrate the ebb and flow of the various image positioning options is to nestle them snuggly among an ocean of words. Grab a paddle and let’s get started.      The image above happens to be centered.    The rest of this paragraph is filler for the sake of seeing the text wrap around the 150×150 image, which is left aligned.   As you can see there should be some space above, below, and to the right of the image. The text should not be creeping on the image. Creeping is just not right. Images need breathing room too. Let them speak like you words. Let them do their jobs without any hassle from the text. In about one more sentence here, we’ll see that the text moves from the right of the image down below the image in seamless transition. Again, letting the do it’s thing. Mission accomplished!   And now for a massively large image. It also has no alignment.      The image above, though 1200px wide, should not overflow the content area. It should remain contained with no visible disruption to the flow of content.      And now we’re going to shift things to the right align. Again, there should be plenty of room above, below, and to the left of the image. Just look at him there — Hey guy! Way to rock that right side. I don’t care what the left aligned image says, you look great. Don’t let anyone else tell you differently.   In just a bit here, you should see the text start to wrap below the right aligned image and settle in nicely. There should still be plenty of room and everything should be sitting pretty. Yeah — Just like that. It never felt so good to be right.   And just when you thought we were done, we’re going to do them all over again with captions!         Look at 580 x 300 getting some love.   The figure above happens to be centered. The caption also has a link in it, just to see if it does anything funky.         Itty-bitty caption.   The rest of this paragraph is filler for the sake of seeing the text wrap around the 150×150 image, which is left aligned.   As you can see there should be some space above, below, and to the right of the image. The text should not be creeping on the image. Creeping is just not right. Images need breathing room too. Let them speak like you words. Let them do their jobs without any hassle from the text. In about one more sentence here, we’ll see that the text moves from the right of the image down below the image in seamless transition. Again, letting the do it’s thing. Mission accomplished!   And now for a massively large image. It also has no alignment.         Massive image comment for your eyeballs.   The figure element above has an inline style of width: 1200px set which should break it outside of the normal content flow.         Feels good to be right all the time.   And now we’re going to shift things to the right align. Again, there should be plenty of room above, below, and to the left of the image. Just look at him there — Hey guy! Way to rock that right side. I don’t care what the left aligned image says, you look great. Don’t let anyone else tell you differently.   In just a bit here, you should see the text start to wrap below the right aligned image and settle in nicely. There should still be plenty of room and everything should be sitting pretty. Yeah — Just like that. It never felt so good to be right.   And that’s a wrap, yo! You survived the tumultuous waters of alignment. Image alignment achievement unlocked!  ","categories": ["Markup"],
        "tags": ["alignment","captions","content","css","image","markup"],
        "url": "/markup/markup-image-alignment/",
        "teaser": null
      },{
        "title": "Markup: HTML Tags and Formatting",
        "excerpt":"A variety of common markup showing how the theme styles them.   Header two   Header three   Header four   Header five   Header six   Blockquotes   Single line blockquote:      Stay hungry. Stay foolish.    Multi line blockquote with a cite reference:      People think focus means saying yes to the thing you’ve got to focus on. But that’s not what it means at all. It means saying no to the hundred other good ideas that there are. You have to pick carefully. I’m actually as proud of the things we haven’t done as the things I have done. Innovation is saying no to 1,000 things.    Steve Jobs — Apple Worldwide Developers’ Conference, 1997   Tables                  Employee       Salary                               John Doe       $1       Because that’s all Steve Jobs needed for a salary.                 Jane Doe       $100K       For all the blogging she does.                 Fred Bloggs       $100M       Pictures are worth a thousand words, right? So Jane × 1,000.                 Jane Bloggs       $100B       With hair like that?! Enough said.                          Header1       Header2       Header3                       cell1       cell2       cell3                 cell4       cell5       cell6                       cell1       cell2       cell3                 cell4       cell5       cell6                       Foot1       Foot2       Foot3           Definition Lists      Definition List Title   Definition list division.   Startup   A startup company or startup is a company or temporary organization designed to search for a repeatable and scalable business model.   #dowork   Coined by Rob Dyrdek and his personal body guard Christopher “Big Black” Boykins, “Do Work” works as a self motivator, to motivating your friends.   Do It Live   I’ll let Bill O’Reilly explain this one.   Unordered Lists (Nested)      List item one            List item one                    List item one           List item two           List item three           List item four                       List item two       List item three       List item four           List item two   List item three   List item four   Ordered List (Nested)      List item one            List item one                    List item one           List item two           List item three           List item four                       List item two       List item three       List item four           List item two   List item three   List item four   Forms           Personalia:     Name:       Email:       Date of birth:       Buttons   Make any link standout more when applying the .btn class.   &lt;a href=\"#\" class=\"btn--success\"&gt;Success Button&lt;/a&gt;   Default Button Primary Button Success Button Warning Button Danger Button Info Button Inverse Button Light Outline Button   [Default Button Text](#link){: .btn} [Primary Button Text](#link){: .btn .btn--primary} [Success Button Text](#link){: .btn .btn--success} [Warning Button Text](#link){: .btn .btn--warning} [Danger Button Text](#link){: .btn .btn--danger} [Info Button Text](#link){: .btn .btn--info} [Inverse Button](#link){: .btn .btn--inverse} [Light Outline Button](#link){: .btn .btn--light-outline}   X-Large Button Large Button Default Button Small Button   [X-Large Button](#link){: .btn .btn--primary .btn--x-large} [Large Button](#link){: .btn .btn--primary .btn--large} [Default Button](#link){: .btn .btn--primary } [Small Button](#link){: .btn .btn--primary .btn--small}   Notices   Watch out! This paragraph of text has been emphasized with the {: .notice} class.   Watch out! This paragraph of text has been emphasized with the {: .notice--primary} class.   Watch out! This paragraph of text has been emphasized with the {: .notice--info} class.   Watch out! This paragraph of text has been emphasized with the {: .notice--warning} class.   Watch out! This paragraph of text has been emphasized with the {: .notice--success} class.   Watch out! This paragraph of text has been emphasized with the {: .notice--danger} class.   HTML Tags   Address Tag      1 Infinite Loop  Cupertino, CA 95014  United States   Anchor Tag (aka. Link)   This is an example of a link.   Abbreviation Tag   The abbreviation CSS stands for “Cascading Style Sheets”.   Cite Tag   “Code is poetry.” —Automattic   Code Tag   You will learn later on in these tests that word-wrap: break-word; will be your best friend.   Strike Tag   This tag will let you strikeout text.   Emphasize Tag   The emphasize tag should italicize text.   Insert Tag   This tag should denote inserted text.   Keyboard Tag   This scarcely known tag emulates keyboard text, which is usually styled like the &lt;code&gt; tag.   Preformatted Tag   This tag styles large blocks of code.    .post-title { \tmargin: 0 0 5px; \tfont-weight: bold; \tfont-size: 38px; \tline-height: 1.2; \tand here's a line of some really, really, really, really long text, just to see how the PRE tag handles it and to find out how it overflows; }   Quote Tag   Developers, developers, developers… –Steve Ballmer   Strong Tag   This tag shows bold text.   Subscript Tag   Getting our science styling on with H2O, which should push the “2” down.   Superscript Tag   Still sticking with science and Albert Einstein’s E = MC2, which should lift the 2 up.   Variable Tag   This allows you to denote variables.  ","categories": ["Markup"],
        "tags": ["content","css","formatting","html","markup"],
        "url": "/markup/markup-html-tags-and-formatting/",
        "teaser": "/assets/images/markup-syntax-highlighting-teaser.jpg"
      },{
        "title": "Markup: Another Post with Images",
        "excerpt":"Here are some examples of what a post with images might look like. If you want to display two or three images next to each other responsively use figure with the appropriate class. Each instance of figure is auto-numbered and displayed in the caption.   Figures (for images or video)   One Up    \t \tMorning Fog Emerging From Trees by A Guy Taking Pictures, on Flickr.   Vero laborum commodo occupy. Semiotics voluptate mumblecore pug. Cosby sweater ullamco quinoa ennui assumenda, sapiente occupy delectus lo-fi. Ea fashion axe Marfa cillum aliquip. Retro Bushwick keytar cliche. Before they sold out sustainable gastropub Marfa readymade, ethical Williamsburg skateboard brunch qui consectetur gentrify semiotics. Mustache cillum irony, fingerstache magna pour-over keffiyeh tousled selfies.   Two Up   Apply the half class like so to display two images side by side that share the same caption.   &lt;figure class=\"half\"&gt;     &lt;a href=\"/assets/images/image-filename-1-large.jpg\"&gt;&lt;img src=\"/assets/images/image-filename-1.jpg\"&gt;&lt;/a&gt;     &lt;a href=\"/assets/images/image-filename-2-large.jpg\"&gt;&lt;img src=\"/assets/images/image-filename-2.jpg\"&gt;&lt;/a&gt;     &lt;figcaption&gt;Caption describing these two images.&lt;/figcaption&gt; &lt;/figure&gt;   And you’ll get something that looks like this:    \t \t \tTwo images.   Three Up   Apply the third class like so to display three images side by side that share the same caption.   &lt;figure class=\"third\"&gt; \t&lt;img src=\"/images/image-filename-1.jpg\"&gt; \t&lt;img src=\"/images/image-filename-2.jpg\"&gt; \t&lt;img src=\"/images/image-filename-3.jpg\"&gt; \t&lt;figcaption&gt;Caption describing these three images.&lt;/figcaption&gt; &lt;/figure&gt;   And you’ll get something that looks like this:    \t \t \t \tThree images.  ","categories": [],
        "tags": ["sample post","images","test"],
        "url": "/markup-more-images/",
        "teaser": "http://farm9.staticflickr.com/8426/7758832526_cc8f681e48_c.jpg"
      },{
        "title": "Markup: Syntax Highlighting",
        "excerpt":"Syntax highlighting is a feature that displays source code, in different colors and fonts according to the category of terms. This feature facilitates writing in a structured language such as a programming language or a markup language as both structures and syntax errors are visually distinct. Highlighting does not affect the meaning of the text itself; it is intended only for human readers.1   GFM Code Blocks   GitHub Flavored Markdown fenced code blocks are supported. To modify styling and highlight colors edit /_sass/syntax.scss.   #container {   float: left;   margin: 0 -240px 0 0;   width: 100%; }   .highlight {   margin: 0;   padding: 1em;   font-family: $monospace;   font-size: $type-size-7;   line-height: 1.8; }  &lt;nav class=\"pagination\" role=\"navigation\"&gt;   {% if page.previous %}     &lt;a href=\"{{ site.url }}{{ page.previous.url }}\" class=\"btn\" title=\"{{ page.previous.title }}\"&gt;Previous article&lt;/a&gt;   {% endif %}   {% if page.next %}     &lt;a href=\"{{ site.url }}{{ page.next.url }}\" class=\"btn\" title=\"{{ page.next.title }}\"&gt;Next article&lt;/a&gt;   {% endif %} &lt;/nav&gt;&lt;!-- /.pagination --&gt;   module Jekyll   class TagIndex &lt; Page     def initialize(site, base, dir, tag)       @site = site       @base = base       @dir = dir       @name = 'index.html'       self.process(@name)       self.read_yaml(File.join(base, '_layouts'), 'tag_index.html')       self.data['tag'] = tag       tag_title_prefix = site.config['tag_title_prefix'] || 'Tagged: '       tag_title_suffix = site.config['tag_title_suffix'] || '&amp;#8211;'       self.data['title'] = \"#{tag_title_prefix}#{tag}\"       self.data['description'] = \"An archive of posts tagged #{tag}.\"     end   end end   Code Blocks in Lists   Indentation matters. Be sure the indent of the code block aligns with the first non-space character after the list item marker (e.g., 1.). Usually this will mean indenting 3 spaces instead of 4.      Do step 1.        Now do this:       def print_hi(name)   puts \"Hi, #{name}\" end print_hi('Tom') #=&gt; prints 'Hi, Tom' to STDOUT.           Now you can do this.   Jekyll Highlight Tag   An example of a code blocking using Jekyll’s {% highlight %} tag.   1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 // 'gulp html' -- does nothing // 'gulp html --prod' -- minifies and gzips HTML files for production gulp.task('html', () =&gt; {   return gulp.src(paths.siteFolderName + paths.htmlPattern)     .pipe(when(argv.prod, htmlmin({       removeComments: true,       collapseWhitespace: true,       collapseBooleanAttributes: false,       removeAttributeQuotes: false,       removeRedundantAttributes: false,       minifyJS: true,       minifyCSS: true     })))     .pipe(when(argv.prod, size({title: 'optimized HTML'})))     .pipe(when(argv.prod, gulp.dest(paths.siteFolderName)))     .pipe(when(argv.prod, gzip({append: true})))     .pipe(when(argv.prod, size({       title: 'gzipped HTML',       gzip: true     })))     .pipe(when(argv.prod, gulp.dest(paths.siteFolderName))) });   1 2 3 4 Module[{},   Sqrt[2]   4 ]   GitHub Gist Embed   An example of a Gist embed below.                    http://en.wikipedia.org/wiki/Syntax_highlighting &#8617;           ","categories": [],
        "tags": ["code","syntax highlighting"],
        "url": "/markup-syntax-highlighting/",
        "teaser": "/assets/images/markup-syntax-highlighting-teaser.jpg"
      },{
        "title": "Welcome to Jekyll!",
        "excerpt":"You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.   To add new posts, simply add a file in the _posts directory that follows the convention YYYY-MM-DD-name-of-post.ext and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.   Jekyll also offers powerful support for code snippets:   def print_hi(name)   puts \"Hi, #{name}\" end print_hi('Tom') #=&gt; prints 'Hi, Tom' to STDOUT.   Check out the Jekyll docs for more info on how to get the most out of Jekyll. File all bugs/feature requests at Jekyll’s GitHub repo. If you have questions, you can ask them on Jekyll Talk.   ","categories": ["Jekyll"],
        "tags": ["update"],
        "url": "/jekyll/welcome-to-jekyll/",
        "teaser": "/assets/images/500x300.png"
      },{
        "title": "Gemified Theme -- Alpha Release",
        "excerpt":"Jekyll themes distributed as Ruby gems are finally here to make installing and upgrading much easier. Gone are the days of forking a repo just to “install it”. Or dealing with merge conflicts when pulling in upstream commits to “upgrade it”.   If you’re interested in testing out Minimal Mistakes as a gemified theme read on. There are a few caveats though:      Support for a theme assets folder was recently added to Jekyll core, but has yet to be released or rolled into the github-pages gem. Meaning you can’t use Minimal Mistakes as a Ruby gem there just yet… locally served or self-hosted installs should be fine if you don’t mind using a pre-release version of Jekyll.   Windows users can’t currently use themes packaged as gems due to a bug with file paths in Jekyll core. This is being worked on so hopefully a fix is on the way soon.   Fine with all that? Great. Let’s continue.   If you’re migrating a site already using Minimal Mistakes and haven’t customized any of the _includes, _layouts, _sass partials, or assets this should be quick and painless.   Step 1: Remove Theme Files   Remove _includes, _layouts, _sass, assets folders and files within. You won’t need these anymore as they’re bundled in the theme.   If you customized any of these then leave them alone and only remove the untouched ones. If setup correctly your modified versions should act as overrides to the versions bundled with the theme.   Step 2: Update Gemfile   In order to test you’ll need to install pre-release gems of Jekyll and Minimal Mistakes.   Start by replacing gem \"github-pages\" or gem \"jekyll\" with the following:   gem \"jekyll\", :git =&gt; \"https://github.com/jekyll/jekyll.git\"   Then add the pre-release Minimal Mistakes theme gem:   gem \"minimal-mistakes-jekyll\", :git =&gt; \"https://github.com/mmistakes/minimal-mistakes.git\", :branch =&gt; \"feature/theme-gem\"`   When finished your Gemfile should look something like this:   source \"https://rubygems.org\"  gem \"jekyll\", :git =&gt; \"https://github.com/jekyll/jekyll.git\" gem \"minimal-mistakes-jekyll\", :git =&gt; \"https://github.com/mmistakes/minimal-mistakes.git\", :branch =&gt; \"feature/theme-gem\"  group :jekyll_plugins do   # gem \"jekyll-archives\"   gem \"jekyll-paginate\"   gem \"jekyll-sitemap\"   gem \"jekyll-gist\"   gem \"jekyll-feed\" end   Step 3: Run Bundler   Run bundle install (or bundle update if you’re updating an existing repo) to install the pre-release gems.   Step 4: Install the Theme   Add theme: \"minimal-mistakes-jekyll\" to your _config.yml file.   If you’re migrating from an existing Minimal Mistakes site you shouldn’t have to change anything else after this. If it’s a new site consult then docs to properly config.   Please Note: Paths for image headers, overlays, teasers, galleries, and feature rows have changed and now require a full path. Instead of just image: filename.jpg you’ll need to use the full path eg: image: assets/images/filename.jpg. The preferred location is now assets/images but can be placed elsewhere or external hosted. This applies for image references in _config.yml and author.yml.   Step 5: jekyll new Tweaks   If this is a new site be sure to add the following files to _data/ and customize as you see fit. There is currently no way of bundling them in with the theme, so be sure to consult the docs on how to properly use both.      _data/ui-text.yml - UI text documentation   _data/navigation.yml - navigation documentation   You’ll also need to:      Replace &lt;site root&gt;/index.html with a modified Minimal Mistakes index.html.   Change layout: post in _posts/0000-00-00-welcome-to-jekyll.markdown to layout: single.   Remove about.md, or at the very least change layout: page to layout: single and remove references to icon-github.html (or copy to your _includes if using).     That’s it! If all goes well running bundle exec jekyll serve should spin-up your site. If you encounter any bumps please file an issue on GitHub and make sure to indicate you’re testing the pre-release Ruby gem version.   File an issue   Thanks!  ","categories": ["Jekyll"],
        "tags": ["update"],
        "url": "/jekyll/gemified-theme-alpha/",
        "teaser": null
      },{
        "title": "Gemified Theme -- Beta Release",
        "excerpt":"Hot on the heels of Jekyll v3.3.0 is a beta release of Minimal Mistakes… as a gemified theme.   minimal-mistakes-jekyll can only be used with Jekyll proper. If you’re hosting on GitHub Pages or using that gem the theme won’t work. 3rd party themes haven’t been white-listed so it’s a no go for now.   Fine with all that? Great. Let’s continue.   If you’re migrating a site already using Minimal Mistakes and haven’t customized any of the _includes, _layouts, _sass partials, or assets this should be quick and painless.   Step 1: Remove Theme Files   Remove _includes, _layouts, _sass, assets folders and files within. You won’t need these anymore as they’re bundled in the theme.   If you customized any of these then leave them alone and only remove the untouched ones. If setup correctly your modified versions should act as overrides to the versions bundled with the theme.   Step 2: Update Gemfile   Replace gem \"github-pages or gem \"jekyll\" with gem \"jekyll\", \"~&gt; 3.3.0\". You’ll need the latest version of Jekyll1 for Minimal Mistakes to work and load all of the /assets/ properly.   Add the Minimal Mistakes theme gem:   gem \"minimal-mistakes-jekyll\"   When finished your Gemfile should look something like this:   source \"https://rubygems.org\"  gem \"jekyll\", \"~&gt; 3.3.0\" gem \"minimal-mistakes-jekyll\"   Step 3: Run Bundler   Run bundle install (or bundle update if you’re updating an existing repo) to install/update Jekyll and the theme.   Step 4: Install the Theme   Add theme: \"minimal-mistakes-jekyll\" to your _config.yml file.   If you’re migrating from an existing Minimal Mistakes site you shouldn’t have to change anything else after this. If it’s a new site consult then docs to properly config.   Please Note: Paths for image headers, overlays, teasers, galleries, and feature rows have changed and now require a full path. Instead of just image: filename.jpg you’ll need to use the full path eg: image: assets/images/filename.jpg. The preferred location is now assets/images but can be placed elsewhere or external hosted. This all applies for image references in _config.yml and author.yml as well.   Step 5: jekyll new Tweaks   If this is a new site be sure to add the following files to _data/ and customize as you see fit. There is currently no way of bundling them in with the theme, so be sure to consult the docs on how to properly use both.      _data/ui-text.yml - UI text documentation   _data/navigation.yml - navigation documentation   You’ll also need to:      Replace &lt;site root&gt;/index.html with a modified Minimal Mistakes index.html.   Change layout: post in _posts/0000-00-00-welcome-to-jekyll.markdown to layout: single.   Remove about.md, or at the very least change layout: page to layout: single and remove references to icon-github.html (or copy to your _includes if using).     That’s it! If all goes well running bundle exec jekyll serve should spin-up your site. If you encounter any bumps please file an issue on GitHub and make sure to indicate you’re testing the pre-release Ruby gem version.   File an issue   Thanks!                 You could also run bundle update jekyll to update Jekyll. &#8617;           ","categories": ["Jekyll"],
        "tags": ["update"],
        "url": "/jekyll/gemified-theme-beta/",
        "teaser": null
      },{
        "title": "Layout: Header Video",
        "excerpt":"This post should display a header with a responsive video, if the theme supports it.   Settings                  Parameter       Required       Description                       id       Required       ID of the video                 provider       Required       Hosting provider of the video, either youtube or vimeo           YouTube   To embed the following YouTube video at url https://www.youtube.com/watch?v=-PVofD2A9t8 (long version) or https://youtu.be/-PVofD2A9t8 (short version) into a post or page’s main content you’d use:   {% include video id=\"-PVofD2A9t8\" provider=\"youtube\" %}               To embed it as a video header you’d use the following YAML Front Matter   header:   video:     id: -PVofD2A9t8     provider: youtube   Vimeo   To embed the following Vimeo video at url https://vimeo.com/212731897 into a post or page’s main content you’d use:   {% include video id=\"212731897\" provider=\"vimeo\" %}               To embed it as a video header you’d use the following YAML Front Matter   header:   video:     id: 212731897     provider: vimeo  ","categories": ["Layout","Uncategorized"],
        "tags": ["video","layout"],
        "url": "/layout/uncategorized/layout-header-video/",
        "teaser": null
      },{
        "title": "Exclude Post from Search Index",
        "excerpt":"This post should not appear in the search index because it has the following YAML Front Matter:   search: true   Note: search: false only works to exclude posts when using Lunr as a search provider.    2023-05-12: 社区聚会 - 200 名参与者 2023-12-25: 圣诞节慈善活动 - 为家庭提供帮助 2024-03-15: 教会周年庆典 - 音乐敬拜和分享会 2024-08-20: 夏令营活动 - 儿童和青少年教育 2024-09-10: 开学祷告会 2024-11-01: 感恩节敬拜   教会历史活动           日期     活动名称     备注           2023-05-12     社区聚会     200 名参与者           2023-12-25     圣诞节慈善活动     为家庭提供帮助           2024-03-15     教会周年庆典     音乐敬拜和分享会     ","categories": ["Jekyll"],
        "tags": [],
        "url": "/jekyll/post-exclude-search33/",
        "teaser": null
      },{
        "title": "Gemified Theme -- Alpha Release",
        "excerpt":"Jekyll themes distributed as Ruby gems are finally here to make installing and upgrading much easier. Gone are the days of forking a repo just to “install it”. Or dealing with merge conflicts when pulling in upstream commits to “upgrade it”.   教会历史活动           日期     活动名称     备注           2023-05-12     社区聚会     200 名参与者           2023-12-25     圣诞节慈善活动     为家庭提供帮助           2024-03-15     教会周年庆典     音乐敬拜和分享会             2024-03-15     教会周年庆典     音乐敬拜和分享会      ","categories": ["Jekyll"],
        "tags": ["update"],
        "url": "/jekyll/gemified-theme-alpha44/",
        "teaser": null
      },{
        "title": "Read Bible -- Schudle",
        "excerpt":"        STARTING     PASSAGES     DONE              5-Jan-2025     Gen 1-24; Ps 1     x              12-Jan-2025     Gen 25-41; Ps 2     x              19-Jan-2025     Gen 42-50; Ex 1-11; Ps 3     x              26-Jan-2025     Ex 12-30; Ps 4     x              2-Feb-2025     Ex 31-40; Lev 1-9; Ps 5     x              9-Feb-2025     Lev 10-25; Ps 6     x              16-Feb-2025     Lev 26-27; Num 1-13; Ps 7     x              23-Feb-2025     Num 14-31; Ps 8     x              2-Mar-2025     Num 32-36; Deut 1-12; Ps 9     x              9-Mar-2025     Deut 13-31; Ps 10     x              16-Mar-2025     Deut 32-34; Josh 1-17; Ps 11     x              23-Mar-2025     Josh 18-24; Jdg 1-10; Ps 12     x              30-Mar-2025     Jdg 11-21; Rut 1-4; 1 Sa 1-4; Ps 13     x              6-Apr-2025     1 Sa 5-22; Ps 14     x              13-Apr-2025     1 Sa 23-31; 2 Sa 1-12; Ps 15     x              20-Apr-2025     2 Sa 13-24; 1 Kgs 1-2; Ps 16     x              27-Apr-2025     1 Kgs 3-17; Ps 17     x              4-May-2025     1 Kgs 18-22; 2 Kgs 1-10; Ps 18     x              11-May-2025     2 Kgs 11-25; 1 Chr 1; Ps 19                   18-May-2025     1 Chr 2-23; Ps 20                   25-May-2025     1 Chr 24-29; 2 Chr 1-17; Ps 21                   1-Jun-2025     2 Chr 18-36; Ps 22                   8-Jun-2025     Ezr 1-10; Neh 1-10; Ps 23                   15-Jun-2025     Neh 11-13; Est 1-10; Job 1-15; Ps 24                   22-Jun-2025     Job 16-42; Ps 1-17                   29-Jun-2025     Ps 18-67                   6-Jul-2025     Ps 68-112                   13-Jul-2025     Ps 113-150; Pro 1-13                   20-Jul-2025     Pro 14-31; Ecc 1-12; Sos 1; Ps 25                   27-Jul-2025     Sos 2-8; Isa 1-25; Ps 26                   3-Aug-2025     Isa 26-49; Ps 27                   10-Aug-2025     Isa 50-66; Jer 1-8; Ps 28                   17-Aug-2025     Jer 9-29; Ps 29                   24-Aug-2025     Jer 30-47; Ps 30                   31-Aug-2025     Jer 48-52; Lam 1-5; Eze 1-9; Ps 31                   7-Sep-2025     Eze 10-26; Ps 32                   14-Sep-2025     Eze 27-43; Ps 33                   21-Sep-2025     Eze 44-48; Dan 1-11; Ps 34                   28-Sep-2025     Dan 12; Hos 1-14; Joe 1-3; Amo 1-9; Oba; Jon 1-4; Mic 1-2; Ps 35                   5-Oct-2025     Mic 3-7; Nah 1-3; Hab 1-3; Zep 1-3; Hag 1-2; Zec 1-14; Mal 1-3; Ps 36                   12-Oct-2025     Mal 4; Mat 1-19; Ps 37                   19-Oct-2025     Mat 20-28; Mk 1-7; Ps 38                   26-Oct-2025     Mk 8-16; Luk 1-6; Ps 39                   2-Nov-2025     Luk 7-21; Ps 40                   9-Nov-2025     Luk 22-24; John 1-11; Ps 41                   16-Nov-2025     John 12-21; Acts 1-8; Ps 42                   23-Nov-2025     Acts 9-26; Ps 43                   30-Nov-2025     Acts 27-28; Rom 1-16; 1 Co 1-7; Ps 44                   7-Dec-2025     1 Co 8-16; 2 Co 1-13; Gal 1-5; Ps 45                   14-Dec-2025     Gal 6; Eph 1-6; Phil 1-4; Col 1-4; 1 Th 1-5; 2 Th 1-3; 1 Ti 1-6; 2 Ti 1-4; Tit 1; Ps 46                   21-Dec-2025     Tit 2-3; Phlm; Heb 1-13; Jam 1-5; 1 Pe 1-5; 2 Pe 1-3; 1 Jn 1; Ps 47                   28-Dec-2025     1 Jn 2-5; 2 Jn; 3 Jn; Jude; Rev 1-22; Ps 48             ","categories": ["Jekyll"],
        "tags": ["Bible","Reading"],
        "url": "/jekyll/read-bible/",
        "teaser": null
      },{
        "title": "Chocolate Chip Cookies",
        "excerpt":"A chocolate chip cookie is a drop cookie that originated in the United States and features chocolate chips as its distinguishing ingredient.   The traditional recipe combines a dough composed of butter and both brown and white sugar with semi-sweet chocolate chips. Variations include recipes with other types of chocolate as well as additional ingredients such as nuts or oatmeal.   This recipe makes 4 dozen cookies.   Ingredients      2 1/4 cups all-purpose flour   1 teaspoon baking soda   1/2 teaspoon salt   1 cup butter, softened and cut to pieces   1 cup sugar   1 cup light brown sugar, packed   2 teaspoons vanilla extract   2 large eggs   2 cups semi-sweet chocolate chips   1/2 teaspoon nutmeg (optional)   1 cup chopped pecans or walnuts (optional)   Directions      Preheat the oven to 350 F.   In a medium bowl, whisk flour with baking soda, nutmeg and salt.   In a large bowl, beat butter with sugar and brown sugar until creamy and light. Add vanilla and eggs, one at a time, and mix until incorporated.   Gradually add dry mixture into the butter-sugar wet blend, mixing with a spatula until combined. Add chocolate chips and nuts until just mixed.   Drop tablespoon-sized clumps onto un-greased cookie sheets. Bake for 8-12 minutes, or until pale brown. Allow to cool on the pan for a minute or three, then transfer cookies to a wire rack to finish cooling.  ","categories": [],
        "tags": [],
        "url": "/recipes/chocolate-chip-cookies/",
        "teaser": null
      },{
        "title": "Oatmeal Cookies",
        "excerpt":"Oatmeal cookies are a proverbial favorite with both kids and adults. This crisp and chewy cookie is loaded with oats, dried fruit, and chopped nuts.   Ingredients      1 cup butter, softened 1 cup white sugar   1 cup packed brown sugar   2 eggs   1 teaspoon vanilla extract   2 cups all-purpose flour   1 teaspoon baking soda   1 teaspoon salt   1 1/2 teaspoons ground cinnamon   3 cups quick cooking oats   Directions      In a medium bowl, cream together butter, white sugar, and brown sugar. Beat in eggs one at a time, then stir in vanilla. Combine flour, baking soda, salt, and cinnamon; stir into the creamed mixture. Mix in oats. Cover, and chill dough for at least one hour.   Preheat the oven to 375 degrees F (190 degrees C). Grease cookie sheets. Roll the dough into walnut sized balls, and place 2 inches apart on cookie sheets. Flatten each cookie with a large fork dipped in sugar.   Bake for 8 to 10 minutes in preheated oven. Allow cookies to cool on baking sheet for 5 minutes before transferring to a wire rack to cool completely.  ","categories": [],
        "tags": [],
        "url": "/recipes/oatmeal-cookies/",
        "teaser": null
      },{
        "title": "Peanut Butter Cookies",
        "excerpt":"A peanut butter cookie is a type of cookie that is distinguished for having peanut butter as a principal ingredient. The cookie generally originated in the United States, its development dating back to the 1910s.   Ingredients      1 cup unsalted butter   1 cup crunchy peanut butter   1 cup white sugar   1 cup packed brown sugar   2 eggs 2   1/2 cups all-purpose flour   1 teaspoon baking powder   1/2 teaspoon salt   1 1/2 teaspoons baking soda   Directions      Cream butter, peanut butter, and sugars together in a bowl; beat in eggs.   In a separate bowl, sift flour, baking powder, baking soda, and salt; stir into butter mixture. Put dough in refrigerator for 1 hour.   Roll dough into 1 inch balls and put on baking sheets. Flatten each ball with a fork, making a crisscross pattern. Bake in a preheated 375 degrees F oven for about 10 minutes or until cookies begin to brown.  ","categories": [],
        "tags": [],
        "url": "/recipes/peanut-butter-cookies/",
        "teaser": null
      }]
